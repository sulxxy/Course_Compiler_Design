  %1 = icmp ne i32 %pred, 0
    -> undefined
  br i1 %1, label %2, label %5
    -> undefined
  %3 = add nsw i32 1, 2
    -> undefined
  %4 = add nsw i32 -1, %3
    -> undefined
  br label %10
    -> undefined
  br label %6
    -> undefined
  %i.0 = phi i32 [ %11, %10 ], [ 1, %5 ]
    -> undefined
  %j.0 = phi i32 [ %12, %10 ], [ 0, %5 ]
    -> undefined
  %7 = icmp slt i32 %j.0, 10
    -> undefined
  br i1 %7, label %8, label %13
    -> undefined
  %9 = add nsw i32 %i.0, 1
    -> undefined
  br label %10
    -> undefined
  %j.1 = phi i32 [ 0, %2 ], [ %j.0, %8 ]
    -> undefined
  %k.0 = phi i32 [ %4, %2 ], [ %9, %8 ]
    -> undefined
  %11 = sub nsw i32 %k.0, 1
    -> undefined
  %12 = add nsw i32 %j.1, 1
    -> undefined
  br label %6
    -> undefined
  %14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str, i32 0, i32 0), i32 %i.0, i32 %j.0)
    -> undefined
  ret void
    -> undefined
  call void @test(i32 0, i32 1)
    -> undefined
  ret i32 0
    -> undefined
